// Generated by CoffeeScript 1.12.7
(function() {
  var MONGO_DB_URL, MongoClient, mongodb;

  mongodb = require('mongodb');

  MongoClient = mongodb.MongoClient;

  MONGO_DB_URL = "mongodb://localhost:27017/pad-testing";

  module.exports = {
    getGroups: function(req, res) {
      var action, groupid;
      groupid = (req.path.split('/'))[5];
      if (groupid !== 'new' && groupid !== 'listall' && (req.path.split('/')).length > 5) {
        action = (req.path.split('/'))[6];
      } else {
        action = groupid;
      }
      return MongoClient.connect(MONGO_DB_URL, function(err, db) {
        if (err) {
          throw err;
        }
        switch (action) {
          case "list":
            return db.collection("user_group").findOne({
              public_id: parseInt(groupid)
            }, function(err, result) {
              if (result) {
                res.send({
                  "result": result.members
                });
              } else {
                res.send({
                  "Error": "Group not found!"
                });
              }
              return db.close();
            });
          case "listall":
            return db.collection("user_group").find({}).toArray(function(err, result) {
              var i, item, len;
              if (err) {
                throw err;
              }
              for (i = 0, len = result.length; i < len; i++) {
                item = result[i];
                delete item._id;
                obj.memberCount = obj.members.length;
                delete obj.members;
              }
              result.push({
                "I AM AN EMPTY GROUP": null,
                "name": "Ungrouped",
                memberCount: 0
              });
              res.send({
                "query": "ok",
                "result": result
              });
              return db.close();
            });
          default:
            res.send({
              "Error": "invalid request"
            });
            return db.close();
        }
      });
    },
    getUser: function(req, res) {
      var uid;
      uid = (req.path.split('/'))[4];
      if (uid) {
        return MongoClient.connect(MONGO_DB_URL, function(err, db) {
          if (err) {
            throw err;
          }
          return db.collection("users").findOne({
            public_identifier: uid
          }, function(err, result) {
            if (result) {
              delete result._id;
              delete result.password;
              res.send({
                "query": "ok",
                "result": result
              });
            } else {
              res.send({
                "Error": "Invalid user"
              });
            }
            return db.close();
          });
        });
      } else {
        return res.send({
          "Error": "Invalid request"
        });
      }
    }
  };

}).call(this);
